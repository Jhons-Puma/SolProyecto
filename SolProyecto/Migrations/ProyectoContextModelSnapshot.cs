// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolProyecto.DataAccess;

namespace SolProyecto.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    partial class ProyectoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.ClienteEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TbCliente");
                });

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.DetallePedidosEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TbPedidoid")
                        .HasColumnType("int");

                    b.Property<int?>("TbProductoid")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<double?>("precioFinal")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("TbPedidoid");

                    b.HasIndex("TbProductoid");

                    b.ToTable("TbDetallePedido");
                });

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.PedidosEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TbClienteid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<string>("fechaVenCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjetaCredito")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("TbClienteid");

                    b.ToTable("TbPedido");
                });

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.ProductoEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("delibery")
                        .HasColumnType("bit");

                    b.Property<string>("descripcipn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("descuento")
                        .HasColumnType("float");

                    b.Property<bool?>("envio")
                        .HasColumnType("bit");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("imgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("precioFinal")
                        .HasColumnType("float");

                    b.Property<double?>("precioInicial")
                        .HasColumnType("float");

                    b.Property<bool?>("retiroTienda")
                        .HasColumnType("bit");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TbProducto");
                });

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.DetallePedidosEntity", b =>
                {
                    b.HasOne("SolProyecto.DataAccess.DBEntities.PedidosEntity", "TbPedido")
                        .WithMany()
                        .HasForeignKey("TbPedidoid");

                    b.HasOne("SolProyecto.DataAccess.DBEntities.ProductoEntity", "TbProducto")
                        .WithMany()
                        .HasForeignKey("TbProductoid");
                });

            modelBuilder.Entity("SolProyecto.DataAccess.DBEntities.PedidosEntity", b =>
                {
                    b.HasOne("SolProyecto.DataAccess.DBEntities.ClienteEntity", "TbCliente")
                        .WithMany()
                        .HasForeignKey("TbClienteid");
                });
#pragma warning restore 612, 618
        }
    }
}
